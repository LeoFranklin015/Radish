type Market @entity {
  id: ID!
  question: String!
  endTime: BigInt!
  totalStaked: BigInt!
  totalYes: BigInt!
  totalNo: BigInt!
  resolved: Boolean!
  won: Boolean
  totalPriceToken: BigInt!
  yesPrice: BigDecimal!
  noPrice: BigDecimal!
  creator: Bytes!
  createdAt: BigInt!
  marketContract: Bytes!
  transactions: [MarketTransaction!]! @derivedFrom(field: "market")
  positions: [Position!]! @derivedFrom(field: "market")
}

type Position @entity {
  id: ID!
  market: Market!
  user: User!
  yesAmount: BigInt!
  noAmount: BigInt!
  updatedAt: BigInt!
}

type User @entity {
  id: ID!
  positions: [Position!]! @derivedFrom(field: "user")
  transactions: [MarketTransaction!]! @derivedFrom(field: "user")
}

type MarketTransaction @entity {
  id: ID!
  market: Market!
  user: User!
  operationType: Int! # 1: buy, 2: sell
  tokenType: Int! # 1: yes, 2: no
  amount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type TokenPrice @entity {
  id: ID!
  market: Market!
  yesPrice: BigDecimal!
  noPrice: BigDecimal!
  timestamp: BigInt!
}
